//------------------------------------------------------------------------
// 简称: Pivot
// 名称: 求转折
// 类别: 用户函数
// 类型: 内建函数
// 输出: 布尔型
//------------------------------------------------------------------------

Params
	NumericSeries Price(1);
	Numeric Length(10);
	Numeric LeftStrength(1);
	Numeric RightStrength(1);
	Numeric Instance(1);
	Numeric HiLo(1);
	NumericRef PivotPrice;
	NumericRef PivotBar;
Vars
	Numeric CandidatePrice( 0 );
	Numeric LengthCntr( 0 );
	Numeric StrengthCntr( 0 );
	Numeric InstanceCntr( 0 );
	Bool PivotTest( False);
	Bool InstanceTest( False ) ;
Begin
	InstanceCntr = 0 ;
	InstanceTest = False ;
	LengthCntr = RightStrength ; 
	While (LengthCntr < Length && (!InstanceTest ))
	{
		CandidatePrice = Price[LengthCntr] ;
		PivotTest = True ;	
		StrengthCntr = LengthCntr + 1 ;
		
		While (PivotTest && StrengthCntr - LengthCntr <= LeftStrength )
		{
			If (( HiLo == 1 And CandidatePrice < Price[StrengthCntr] ) or ( HiLo == -1 And CandidatePrice > Price[StrengthCntr] ))
				PivotTest = False;
			Else
				StrengthCntr = StrengthCntr + 1 ;
		}
		
		StrengthCntr = LengthCntr - 1 ;
		While (PivotTest && (LengthCntr - StrengthCntr) <= RightStrength )
		{
			If (( HiLo == 1 And CandidatePrice <= Price[StrengthCntr] ) or ( HiLo == -1 And CandidatePrice >= Price[StrengthCntr] ))
				PivotTest = False;
			Else
				StrengthCntr = StrengthCntr - 1 ;
		}
		
		If (PivotTest)		
			InstanceCntr = InstanceCntr + 1 ;

		If (InstanceCntr == Instance)
			InstanceTest = True;
		Else
			LengthCntr = LengthCntr + 1 ;
	}	
	
	If (InstanceTest )
	{
		PivotPrice = CandidatePrice ;
		PivotBar = LengthCntr ;
		Return True;
	}Else
	{
		PivotPrice = -1 ;
		PivotBar = -1 ;
		Return False;		
	}	
End

//------------------------------------------------------------------------
// 编译版本	GS2010.12.08
// 版权所有	TradeBlazer Software 2003－2010
// 更改声明	TradeBlazer Software保留对TradeBlazer平
//			台每一版本的TradeBlazer公式修改和重写的权利
//------------------------------------------------------------------------