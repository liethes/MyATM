//------------------------------------------------------------------------
// 简称: CL_FirstPullBackSys_S
// 名称: 基于MACD判断的交易系统
// 类别: 公式应用
// 类型: 内建应用
// 输出:
// 策略说明:
//			基于MACD在价格回撤时进行判断的交易系统
//			 
// 系统要素:
//			 1. 用MACD慢线在零轴下判断趋势
//			 2. 在空头趋势中以收盘价和波动率构成入场出场通道
// 入场条件:
//			 1. 价格低于MACD慢线下穿零轴的当前价格和波动率组成的通道下轨
//			 
// 出场条件: 
//			 1. macd慢线在零轴上
//			 2. 价格高于MACD慢线下穿零轴的当前价格和波动率组成的通道上轨
//           3. 价格高于空头趋势形成时的最高价格出场
//		 注: 
//----------------------------------------------------------------------//
PARAMS
	Numeric FastMA(4); //macd短周期值
	Numeric SlowMA(10); //macd长周期值
	Numeric AvgMA(16); //MACD慢线周期值
	Numeric ATRLen(10); //atr周期值
	Numeric EATRPcnt(1); //入场通道波动率过滤数值
	Numeric XATRPcnt(1); //出场通道波动率过滤数值
VARS
	NumericSeries MACDLine(0);
	NumericSeries SignalLine(0);
	NumericSeries ZeroLine(0);
	NumericSeries AATR(0);
	BoolSeries UpTrend(false);
	BoolSeries DnTrend(false);
	BoolSeries SellSetup(false);
	NumericSeries CTrendHigh(0);
	BoolSeries SignalFlag(false);
	Bool Con1;
	Bool Con2;
	Numeric Minpoint;
	NumericSeries Lowerband; //卖出触发价
	NumericSeries Exitband; //出场触发价
BEGIN

// 集合竞价和小节休息过滤
	if (!CallAuctionFilter()) RETURN;

	Minpoint = Minmove * PriceScale;
	MACDLine = XAverage(Close, FastMA) - XAverage(Close, SlowMA); //计算macd快线
	SignalLine = XAverage(MACDLine, AvgMA); //计算macd慢线
	AATR = AvgtrueRange(ATRLen); //计算atr波动率
	ZeroLine = 0; //零轴

	Con1 = CrossOver(SignalLine, ZeroLine); //慢线上穿零轴

	if (Con1 == true) //当慢线上穿零轴时候,定义为多头趋势
	{
		UpTrend = true;
		DnTrend = false;
		SignalFlag = false;
		SellSetup = false;
	}

	Con2 = CrossUnder(SignalLine, ZeroLine); //慢线下穿零轴

	if (Con2 == true) //当慢线下穿零轴时候,定义为空头趋势
	{
		DnTrend = true;
		SignalFlag = false;
		UpTrend = false;
	}

	if (DnTrend == true) {
		if (SignalFlag == false) //空头趋势时记录当前最低价以及设置入场条件
		{
			SellSetup = true;
			CTrendHigh = High;
		}

		if (MACDLine > SignalLine and High > CTrendHigh[1]) //当MACD均线多头排列时候,且当前价格更高时更新最高价
			CTrendHigh = High;
	}

	if (SellSetup[1] == true and SellSetup[2] == false) // 满足入场条件设定入场价格以及出场价格
	{
		Lowerband = Close[1] - (EATRPcnt * AATR[1]);
		Exitband = Close[1] + (XATRPcnt * AATR[1]);
	}

//系统入场
	if (SellSetup[1] == true and MarketPosition == 0) //做空
	{
		if (Low <= Lowerband) {
			SellShort(0, Min(Open, Lowerband));
			SellSetup = false; //持有空单时不再满足入场条件
			SignalFlag = true;
		}
	}

//系统出场
	if (MarketPosition == -1 and BarsSinceEntry > 0) {
		if (UpTrend[1] == true) //空头趋势不在时,空头出场
		{
			BuytoCover(0, Open);
		}
		else if (High >= CTrendHigh[1] + Minpoint and CTrendHigh[1] + Minpoint <= Exitband) //持有空单后高于出场价格出场
		{
			BuytoCover(0, max(Open, CTrendHigh[1] + Minpoint));
		}
		else if (High >= Exitband) //持有多单后低于入场最低价格出场
		{
			BuytoCover(0, max(Open, Exitband));
		}
	}

END

//------------------------------------------------------------------------
// 编译版本	GS2014.10.25
// 版权所有	TradeBlazer Software 2003－2014
// 更改声明	TradeBlazer Software保留对TradeBlazer平
//			台每一版本的TradeBlazer公式修改和重写的权利
//------------------------------------------------------------------------
