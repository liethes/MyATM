//------------------------------------------------------------------------
// 简称: NthExtremes
// 名称: 求N极值
// 类别: 用户函数
// 类型: 内建函数
// 输出: 数值型
//------------------------------------------------------------------------

PARAMS
	NumericSeries Price(1);
	Numeric Length(10);
	Numeric N(5);
	Bool bMax(true);
	NumericRef NthExtremeBar;
VARS
	Numeric nMaxBar;
	Numeric NthMaxValue;
	Numeric nMinBar;
	Numeric NthMinValue;
	Numeric TmpValue;
	Numeric NthRETURNValue;
	Numeric nBetterCnt;
	Numeric nEqualCnt;
	Numeric nEqualIndex;
	Numeric i;
	Numeric j;
	Numeric k;
BEGIN
	if (Length > 0 && N > 0 && N <= Length) {
		NthMaxValue = Extremes(Price, Length, true, nMaxBar);
		NthMinValue = Extremes(Price, Length, false, nMinBar);

		if (bMax) {
			for i = 2 to N {
				TmpValue = NthMinValue - 1;
				nBetterCnt = 0;
				nEqualCnt = 0;
				for j = 0 to Length - 1 {
					if (Price[j] > NthMaxValue) {
						nBetterCnt = nBetterCnt + 1;
					}
					else if (Price[j] < NthMaxValue) {
						if (Price[j] > TmpValue) {
							TmpValue = Price[j];
							nMaxBar = j;
						}
					}
					else {
						nEqualCnt = nEqualCnt + 1;
					}
				}

				if (nBetterCnt + nEqualCnt >= i) {
					nEqualIndex = 0;
					for k = 0 to Length - 1 {
						if (Price[k] == NthMaxValue) {
							nEqualIndex = nEqualIndex + 1;
							if (nEqualIndex == (i - nBetterCnt)) {
								nMaxBar = k;
							}
						}
					}
				}
				else {
					NthMaxValue = TmpValue;
				}
			}
			NthExtremeBar = nMaxBar;
			NthRETURNValue = NthMaxValue;
		}
		else {
			for i = 2 to N {
				TmpValue = NthMaxValue + 1;
				nBetterCnt = 0;
				nEqualCnt = 0;
				for j = 0 to Length - 1 {
					if (Price[j] < NthMinValue) {
						nBetterCnt = nBetterCnt + 1;
					}
					else if (Price[j] > NthMinValue) {
						if (Price[j] < TmpValue) {
							TmpValue = Price[j];
							nMinBar = j;
						}
					}
					else {
						nEqualCnt = nEqualCnt + 1;
					}
				}

				if (nBetterCnt + nEqualCnt >= i) {
					nEqualIndex = 0;
					for k = 0 to Length - 1 {
						if (Price[k] == NthMinValue) {
							nEqualIndex = nEqualIndex + 1;
							if (nEqualIndex == (i - nBetterCnt)) {
								nMinBar = k;
							}
						}
					}
				}
				else {
					NthMinValue = TmpValue;
				}
			}
			NthExtremeBar = nMinBar;
			NthRETURNValue = NthMinValue;
		}
	}
	else {
		NthRETURNValue = -1;
		NthExtremeBar = -1;
	}
	RETURN NthRETURNValue;
END

//------------------------------------------------------------------------
// 编译版本	GS2010.12.08
// 版权所有	TradeBlazer Software 2003－2010
// 更改声明	TradeBlazer Software保留对TradeBlazer平
//			台每一版本的TradeBlazer公式修改和重写的权利
//------------------------------------------------------------------------
