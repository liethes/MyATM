//------------------------------------------------------------------------
// 简称: ParabolicSAR
// 名称: 求抛物线转向
// 类别: 用户函数
// 类型: 内建函数
// 输出: 数值型
//------------------------------------------------------------------------

PARAMS
	Numeric AfStep(0.02);
	Numeric AfLimit(0.2);
	NumericRef oParClose;
	NumericRef oParOpen;
	NumericRef oPosition;
	NumericRef oTransition;
VARS
	NumericSeries Af(0);
	NumericSeries ParOpen(0);
	NumericSeries Position(0);
	NumericSeries HHValue(0);
	NumericSeries LLValue(0);
BEGIN
	if (CurrentBar == 0) {
		Position = 1;
		oTransition = 1;
		Af = AfStep;
		HHValue = High;
		LLValue = Low;
		oParClose = LLValue;
		ParOpen = oParClose + Af * (HHValue - oParClose);
		if (ParOpen > Low) {
			ParOpen = Low;
		}
	}
	else {
		oTransition = 0;
		if (High > HHValue[1]) {
			HHValue = High;
		}
		else {
			HHValue = HHValue[1];
		}

		if (Low < LLValue[1]) {
			LLValue = Low;
		}
		else {
			LLValue = LLValue[1];
		}

		if (Position[1] == 1) {
			if (Low <= ParOpen[1]) {
				Position = -1;
				oTransition = -1;
				oParClose = HHValue;
				HHValue = High;
				LLValue = Low;

				Af = AfStep;
				ParOpen = oParClose + Af * (LLValue - oParClose);

				if (ParOpen < High) {
					ParOpen = High;
				}

				if (ParOpen < High[1]) {
					ParOpen = High[1];
				}
			}
			else {
				Position = Position[1];
				oParClose = ParOpen[1];
				if (HHValue > HHValue[1] and Af[1] < AfLimit) {
					if (Af[1] + AfStep > AfLimit) {
						Af = AfLimit;
					}
					else {
						Af = Af[1] + AfStep;
					}

				}
				else {
					Af = Af[1];
				}
				ParOpen = oParClose + Af * (HHValue - oParClose);

				if (ParOpen > Low) {
					ParOpen = Low;
				}

				if (ParOpen > Low[1]) {
					ParOpen = Low[1];
				}
			}
		}
		else {
			if (High >= ParOpen[1]) {
				Position = 1;
				oTransition = 1;

				oParClose = LLValue;
				HHValue = High;
				LLValue = Low;

				Af = AfStep;
				ParOpen = oParClose + Af * (HHValue - oParClose);
				if (ParOpen > Low) {
					ParOpen = Low;
				}

				if (ParOpen > Low[1]) {
					ParOpen = Low[1];
				}
			}
			else {
				Position = Position[1];
				oParClose = ParOpen[1];

				if (LLValue < LLValue[1] And Af[1] < AfLimit) {
					if (Af[1] + AfStep > AfLimit) {
						Af = AfLimit;
					}
					else {
						Af = Af[1] + AfStep;
					}
				}
				else {
					Af = Af[1];
				}
				ParOpen = oParClose + Af * (LLValue - oParClose);

				if (ParOpen < High) {
					ParOpen = High;
				}

				if (ParOpen < High[1]) {
					ParOpen = High[1];
				}
			}
		}
	}

	oParOpen = ParOpen;
	oPosition = Position;
	RETURN true;
END

//------------------------------------------------------------------------
// 编译版本	GS2010.12.08
// 版权所有	TradeBlazer Software 2003－2010
// 更改声明	TradeBlazer Software保留对TradeBlazer平
//			台每一版本的TradeBlazer公式修改和重写的权利
//------------------------------------------------------------------------
